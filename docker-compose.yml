version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: library_postgres
    environment:
      POSTGRES_DB: librarydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - library_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    container_name: library_backend
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: librarydb
      DB_SSLMODE: disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - library_network
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: library_frontend
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:8080/api/v1
    depends_on:
      - backend
    networks:
      - library_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  library_network:
    driver: bridge